// Mocks generated by Mockito 5.4.6 from annotations
// in dietify/test/pages/workout/workout_add_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:dietify/models/providers/settings_provider.dart' as _i7;
import 'package:dietify/models/providers/workout_provider.dart' as _i3;
import 'package:dietify/models/repository/workout_repository.dart' as _i2;
import 'package:dietify/models/settings.dart' as _i8;
import 'package:dietify/models/workout.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWorkoutRepository_0 extends _i1.SmartFake
    implements _i2.WorkoutRepository {
  _FakeWorkoutRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WorkoutProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutProvider extends _i1.Mock implements _i3.WorkoutProvider {
  MockWorkoutProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WorkoutRepository get workoutRepository => (super.noSuchMethod(
        Invocation.getter(#workoutRepository),
        returnValue: _FakeWorkoutRepository_0(
          this,
          Invocation.getter(#workoutRepository),
        ),
      ) as _i2.WorkoutRepository);

  @override
  set lastWorkout(_i4.Workout? _lastWorkout) => super.noSuchMethod(
        Invocation.setter(
          #lastWorkout,
          _lastWorkout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set randomWorkout(_i4.Workout? _randomWorkout) => super.noSuchMethod(
        Invocation.setter(
          #randomWorkout,
          _randomWorkout,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void updateLastWorkout(_i4.Workout? newLastWorkout) => super.noSuchMethod(
        Invocation.method(
          #updateLastWorkout,
          [newLastWorkout],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<void> getRandomWorkout() => (super.noSuchMethod(
        Invocation.method(
          #getRandomWorkout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> loadLastWorkout() => (super.noSuchMethod(
        Invocation.method(
          #loadLastWorkout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveLastWorkout() => (super.noSuchMethod(
        Invocation.method(
          #saveLastWorkout,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertWorkout(_i4.Workout? workout) => (super.noSuchMethod(
        Invocation.method(
          #insertWorkout,
          [workout],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SettingsProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsProvider extends _i1.Mock implements _i7.SettingsProvider {
  MockSettingsProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<void> getSavedSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSavedSettings,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setSettings(_i8.Settings? settings) => (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [settings],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  void toggleTheme() => super.noSuchMethod(
        Invocation.method(
          #toggleTheme,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void toggleNotis() => super.noSuchMethod(
        Invocation.method(
          #toggleNotis,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDefaultSettings() => super.noSuchMethod(
        Invocation.method(
          #setDefaultSettings,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
